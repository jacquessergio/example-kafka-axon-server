version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      zk_id: "1"
    ports:
      - "2181:2181"
    networks:
      - intranet-docker-lab
  kafka:
    hostname: kafka
    image: confluentinc/cp-kafka:5.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - intranet-docker-lab
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      #ME_CONFIG_BASICAUTH_USERNAME: root
      #ME_CONFIG_BASICAUTH_PASSWORD: rootpassword
      ME_CONFIG_MONGODB_PORT: 27017
      #ME_CONFIG_MONGODB_ADMINUSERNAME: root
      #ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
    links:
      - mongo
    networks:
      - intranet-docker-lab
  mongo:
    image: mongo:latest
    environment:
      #MONGO_INITDB_ROOT_USERNAME: root
      #MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: realestatemanagement
    ports:
      - "27017:27017"
    volumes:
      - C:\dev\mongodb\mongo-volume:/data/db
    networks:
      - intranet-docker-lab
  ## For windows
  #axonserver:
   # image: axoniq/axonserver
   # hostname: axonserver
   # volumes:
    #  - type: bind
    #    source: ./data
    #    target: /data
    #  - type: bind
    #    source: ./events
    #    target: /eventdata
    #  - type: bind
    #    source: ./config
    #    target: /config
    #    read_only: true
    #ports:
    #  - '8024:8024'
    #  - '8124:8124'
    #  - '8224:8224'
    #networks:
    #  - intranet-docker-lab
  axonserver:
    image: axoniq/axonserver
    hostname: axonserver
    ports:
      - "8024:8024"
      - "8124:8124"
      - "8224:8224"
    networks:
      - intranet-docker-lab
networks: 
    intranet-docker-lab:
      driver: bridge     